# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: awstharshidocker/process-order-service
  EC2_HOST: your.ec2.public.ip
  EC2_USER: ec2-user
  SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
  DB_HOST: your-db-host
  DB_PORT: 5432
  DB_NAME: your-db-name
  DB_USER: your-db-user
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Build Docker image
      run: |
        docker build -t $DOCKER_IMAGE_NAME:${{ github.sha }} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ 'awstharshi@gmail.com' }}
        password: ${{ 'Test_1user' }}

    - name: Push Docker image
      run: |
        docker push $DOCKER_IMAGE_NAME:${{ github.sha }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_USER }}
        key: ${{ env.SSH_PRIVATE_KEY }}
        script: |
          docker pull $DOCKER_IMAGE_NAME:${{ github.sha }}
          docker stop process-order-service || true
          docker rm process-order-service || true
          docker run -d --name process-order-service \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME} \
            -e SPRING_DATASOURCE_USERNAME=${DB_USER} \
            -e SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD} \
            $DOCKER_IMAGE_NAME:${{ github.sha }}
